// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/02/2017 00:36:08"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          ProcesadorTotal
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module ProcesadorTotal_vlg_vec_tst();
// constants                                           
// general purpose registers
reg Clk;
reg Inicio;
reg Interrupcion;
reg [0:3] Opcion;
reg Reset;
reg [0:9] Switch;
// wires                                               
wire [0:15] DatoIn;
wire [0:15] DatoOut;
wire [0:9] Direccion;
wire Escribir;
wire [1:30] Estados;
wire [0:15] IActual;
wire Leer;
wire [6:0] Sie1;
wire [6:0] Sie10;
wire [6:0] Sie100;
wire [6:0] Sie1000;
wire [6:0] Sie10000;

// assign statements (if any)                          
ProcesadorTotal i1 (
// port map - connection between master ports and signals/registers   
	.Clk(Clk),
	.DatoIn(DatoIn),
	.DatoOut(DatoOut),
	.Direccion(Direccion),
	.Escribir(Escribir),
	.Estados(Estados),
	.IActual(IActual),
	.Inicio(Inicio),
	.Interrupcion(Interrupcion),
	.Leer(Leer),
	.Opcion(Opcion),
	.Reset(Reset),
	.Sie1(Sie1),
	.Sie10(Sie10),
	.Sie100(Sie100),
	.Sie1000(Sie1000),
	.Sie10000(Sie10000),
	.Switch(Switch)
);
initial 
begin 
#5000000 $finish;
end 

// Clk
always
begin
	Clk = 1'b0;
	Clk = #5000 1'b1;
	#5000;
end 

// Interrupcion
initial
begin
	Interrupcion = 1'b0;
end 

// Reset
initial
begin
	Reset = 1'b1;
end 

// Inicio
initial
begin
	Inicio = 1'b0;
	Inicio = #20000 1'b1;
end 
// Opcion[ 3 ]
initial
begin
	Opcion[3] = 1'b0;
end 
// Opcion[ 2 ]
initial
begin
	Opcion[2] = 1'b0;
end 
// Opcion[ 1 ]
initial
begin
	Opcion[1] = 1'b0;
end 
// Opcion[ 0 ]
initial
begin
	Opcion[0] = 1'b1;
end 
// Switch[ 9 ]
initial
begin
	Switch[9] = 1'b1;
end 
// Switch[ 8 ]
initial
begin
	Switch[8] = 1'b0;
end 
// Switch[ 7 ]
initial
begin
	Switch[7] = 1'b0;
end 
// Switch[ 6 ]
initial
begin
	Switch[6] = 1'b0;
end 
// Switch[ 5 ]
initial
begin
	Switch[5] = 1'b0;
end 
// Switch[ 4 ]
initial
begin
	Switch[4] = 1'b1;
end 
// Switch[ 3 ]
initial
begin
	Switch[3] = 1'b0;
end 
// Switch[ 2 ]
initial
begin
	Switch[2] = 1'b0;
end 
// Switch[ 1 ]
initial
begin
	Switch[1] = 1'b0;
end 
// Switch[ 0 ]
initial
begin
	Switch[0] = 1'b0;
end 
endmodule

